//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LabMan {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("UBSLABMN_MXOrderProd")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class UBSLABMN_MXOrderProd : global::System.Data.DataSet {
        
        private TORDERPRODUCTIONDataTable tableTORDERPRODUCTION;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UBSLABMN_MXOrderProd() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected UBSLABMN_MXOrderProd(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TORDERPRODUCTION"] != null)) {
                    base.Tables.Add(new TORDERPRODUCTIONDataTable(ds.Tables["TORDERPRODUCTION"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TORDERPRODUCTIONDataTable TORDERPRODUCTION {
            get {
                return this.tableTORDERPRODUCTION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            UBSLABMN_MXOrderProd cln = ((UBSLABMN_MXOrderProd)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TORDERPRODUCTION"] != null)) {
                    base.Tables.Add(new TORDERPRODUCTIONDataTable(ds.Tables["TORDERPRODUCTION"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTORDERPRODUCTION = ((TORDERPRODUCTIONDataTable)(base.Tables["TORDERPRODUCTION"]));
            if ((initTable == true)) {
                if ((this.tableTORDERPRODUCTION != null)) {
                    this.tableTORDERPRODUCTION.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "UBSLABMN_MXOrderProd";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/UBSLABMN_MXOrderProd.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTORDERPRODUCTION = new TORDERPRODUCTIONDataTable();
            base.Tables.Add(this.tableTORDERPRODUCTION);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeTORDERPRODUCTION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            UBSLABMN_MXOrderProd ds = new UBSLABMN_MXOrderProd();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void TORDERPRODUCTIONRowChangeEventHandler(object sender, TORDERPRODUCTIONRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TORDERPRODUCTIONDataTable : global::System.Data.TypedTableBase<TORDERPRODUCTIONRow> {
            
            private global::System.Data.DataColumn columnORDERID;
            
            private global::System.Data.DataColumn columnPLANTNUMBER;
            
            private global::System.Data.DataColumn columnMATNR;
            
            private global::System.Data.DataColumn columnWORKCENTERID;
            
            private global::System.Data.DataColumn columnREALQTY;
            
            private global::System.Data.DataColumn columnPLANNEDQTY;
            
            private global::System.Data.DataColumn columnREALDATE;
            
            private global::System.Data.DataColumn columnPLANNEDDATE;
            
            private global::System.Data.DataColumn columnQTYXPALLET;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnBATCH;
            
            private global::System.Data.DataColumn columnCREATIONDATE;
            
            private global::System.Data.DataColumn columnCREATIONUSER;
            
            private global::System.Data.DataColumn columnLASTCHANGEDATE;
            
            private global::System.Data.DataColumn columnLASTCHANGEUSER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TORDERPRODUCTIONDataTable() {
                this.TableName = "TORDERPRODUCTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TORDERPRODUCTIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected TORDERPRODUCTIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ORDERIDColumn {
                get {
                    return this.columnORDERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PLANTNUMBERColumn {
                get {
                    return this.columnPLANTNUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MATNRColumn {
                get {
                    return this.columnMATNR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WORKCENTERIDColumn {
                get {
                    return this.columnWORKCENTERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn REALQTYColumn {
                get {
                    return this.columnREALQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PLANNEDQTYColumn {
                get {
                    return this.columnPLANNEDQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn REALDATEColumn {
                get {
                    return this.columnREALDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PLANNEDDATEColumn {
                get {
                    return this.columnPLANNEDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn QTYXPALLETColumn {
                get {
                    return this.columnQTYXPALLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BATCHColumn {
                get {
                    return this.columnBATCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CREATIONDATEColumn {
                get {
                    return this.columnCREATIONDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CREATIONUSERColumn {
                get {
                    return this.columnCREATIONUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LASTCHANGEDATEColumn {
                get {
                    return this.columnLASTCHANGEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LASTCHANGEUSERColumn {
                get {
                    return this.columnLASTCHANGEUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TORDERPRODUCTIONRow this[int index] {
                get {
                    return ((TORDERPRODUCTIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TORDERPRODUCTIONRowChangeEventHandler TORDERPRODUCTIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TORDERPRODUCTIONRowChangeEventHandler TORDERPRODUCTIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TORDERPRODUCTIONRowChangeEventHandler TORDERPRODUCTIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TORDERPRODUCTIONRowChangeEventHandler TORDERPRODUCTIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddTORDERPRODUCTIONRow(TORDERPRODUCTIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TORDERPRODUCTIONRow AddTORDERPRODUCTIONRow(string ORDERID, string PLANTNUMBER, string MATNR, string WORKCENTERID, decimal REALQTY, decimal PLANNEDQTY, System.DateTime REALDATE, System.DateTime PLANNEDDATE, decimal QTYXPALLET, string STATUS, decimal BATCH, System.DateTime CREATIONDATE, string CREATIONUSER, System.DateTime LASTCHANGEDATE, string LASTCHANGEUSER) {
                TORDERPRODUCTIONRow rowTORDERPRODUCTIONRow = ((TORDERPRODUCTIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ORDERID,
                        PLANTNUMBER,
                        MATNR,
                        WORKCENTERID,
                        REALQTY,
                        PLANNEDQTY,
                        REALDATE,
                        PLANNEDDATE,
                        QTYXPALLET,
                        STATUS,
                        BATCH,
                        CREATIONDATE,
                        CREATIONUSER,
                        LASTCHANGEDATE,
                        LASTCHANGEUSER};
                rowTORDERPRODUCTIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTORDERPRODUCTIONRow);
                return rowTORDERPRODUCTIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TORDERPRODUCTIONRow FindByORDERID(string ORDERID) {
                return ((TORDERPRODUCTIONRow)(this.Rows.Find(new object[] {
                            ORDERID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TORDERPRODUCTIONDataTable cln = ((TORDERPRODUCTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TORDERPRODUCTIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnORDERID = base.Columns["ORDERID"];
                this.columnPLANTNUMBER = base.Columns["PLANTNUMBER"];
                this.columnMATNR = base.Columns["MATNR"];
                this.columnWORKCENTERID = base.Columns["WORKCENTERID"];
                this.columnREALQTY = base.Columns["REALQTY"];
                this.columnPLANNEDQTY = base.Columns["PLANNEDQTY"];
                this.columnREALDATE = base.Columns["REALDATE"];
                this.columnPLANNEDDATE = base.Columns["PLANNEDDATE"];
                this.columnQTYXPALLET = base.Columns["QTYXPALLET"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnBATCH = base.Columns["BATCH"];
                this.columnCREATIONDATE = base.Columns["CREATIONDATE"];
                this.columnCREATIONUSER = base.Columns["CREATIONUSER"];
                this.columnLASTCHANGEDATE = base.Columns["LASTCHANGEDATE"];
                this.columnLASTCHANGEUSER = base.Columns["LASTCHANGEUSER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnORDERID = new global::System.Data.DataColumn("ORDERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDERID);
                this.columnPLANTNUMBER = new global::System.Data.DataColumn("PLANTNUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANTNUMBER);
                this.columnMATNR = new global::System.Data.DataColumn("MATNR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATNR);
                this.columnWORKCENTERID = new global::System.Data.DataColumn("WORKCENTERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKCENTERID);
                this.columnREALQTY = new global::System.Data.DataColumn("REALQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREALQTY);
                this.columnPLANNEDQTY = new global::System.Data.DataColumn("PLANNEDQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANNEDQTY);
                this.columnREALDATE = new global::System.Data.DataColumn("REALDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREALDATE);
                this.columnPLANNEDDATE = new global::System.Data.DataColumn("PLANNEDDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANNEDDATE);
                this.columnQTYXPALLET = new global::System.Data.DataColumn("QTYXPALLET", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTYXPALLET);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnBATCH = new global::System.Data.DataColumn("BATCH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCH);
                this.columnCREATIONDATE = new global::System.Data.DataColumn("CREATIONDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATIONDATE);
                this.columnCREATIONUSER = new global::System.Data.DataColumn("CREATIONUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATIONUSER);
                this.columnLASTCHANGEDATE = new global::System.Data.DataColumn("LASTCHANGEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTCHANGEDATE);
                this.columnLASTCHANGEUSER = new global::System.Data.DataColumn("LASTCHANGEUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTCHANGEUSER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnORDERID}, true));
                this.columnORDERID.AllowDBNull = false;
                this.columnORDERID.Unique = true;
                this.columnORDERID.MaxLength = 12;
                this.columnPLANTNUMBER.AllowDBNull = false;
                this.columnPLANTNUMBER.MaxLength = 4;
                this.columnMATNR.AllowDBNull = false;
                this.columnMATNR.MaxLength = 18;
                this.columnWORKCENTERID.AllowDBNull = false;
                this.columnWORKCENTERID.MaxLength = 20;
                this.columnREALQTY.AllowDBNull = false;
                this.columnPLANNEDQTY.AllowDBNull = false;
                this.columnREALDATE.AllowDBNull = false;
                this.columnPLANNEDDATE.AllowDBNull = false;
                this.columnQTYXPALLET.AllowDBNull = false;
                this.columnSTATUS.AllowDBNull = false;
                this.columnSTATUS.MaxLength = 2;
                this.columnCREATIONDATE.AllowDBNull = false;
                this.columnCREATIONUSER.AllowDBNull = false;
                this.columnCREATIONUSER.MaxLength = 10;
                this.columnLASTCHANGEDATE.AllowDBNull = false;
                this.columnLASTCHANGEUSER.AllowDBNull = false;
                this.columnLASTCHANGEUSER.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TORDERPRODUCTIONRow NewTORDERPRODUCTIONRow() {
                return ((TORDERPRODUCTIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TORDERPRODUCTIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TORDERPRODUCTIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TORDERPRODUCTIONRowChanged != null)) {
                    this.TORDERPRODUCTIONRowChanged(this, new TORDERPRODUCTIONRowChangeEvent(((TORDERPRODUCTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TORDERPRODUCTIONRowChanging != null)) {
                    this.TORDERPRODUCTIONRowChanging(this, new TORDERPRODUCTIONRowChangeEvent(((TORDERPRODUCTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TORDERPRODUCTIONRowDeleted != null)) {
                    this.TORDERPRODUCTIONRowDeleted(this, new TORDERPRODUCTIONRowChangeEvent(((TORDERPRODUCTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TORDERPRODUCTIONRowDeleting != null)) {
                    this.TORDERPRODUCTIONRowDeleting(this, new TORDERPRODUCTIONRowChangeEvent(((TORDERPRODUCTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveTORDERPRODUCTIONRow(TORDERPRODUCTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UBSLABMN_MXOrderProd ds = new UBSLABMN_MXOrderProd();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TORDERPRODUCTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TORDERPRODUCTIONRow : global::System.Data.DataRow {
            
            private TORDERPRODUCTIONDataTable tableTORDERPRODUCTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TORDERPRODUCTIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTORDERPRODUCTION = ((TORDERPRODUCTIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ORDERID {
                get {
                    return ((string)(this[this.tableTORDERPRODUCTION.ORDERIDColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.ORDERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PLANTNUMBER {
                get {
                    return ((string)(this[this.tableTORDERPRODUCTION.PLANTNUMBERColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.PLANTNUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MATNR {
                get {
                    return ((string)(this[this.tableTORDERPRODUCTION.MATNRColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.MATNRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WORKCENTERID {
                get {
                    return ((string)(this[this.tableTORDERPRODUCTION.WORKCENTERIDColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.WORKCENTERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal REALQTY {
                get {
                    return ((decimal)(this[this.tableTORDERPRODUCTION.REALQTYColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.REALQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal PLANNEDQTY {
                get {
                    return ((decimal)(this[this.tableTORDERPRODUCTION.PLANNEDQTYColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.PLANNEDQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime REALDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTORDERPRODUCTION.REALDATEColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.REALDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime PLANNEDDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTORDERPRODUCTION.PLANNEDDATEColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.PLANNEDDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal QTYXPALLET {
                get {
                    return ((decimal)(this[this.tableTORDERPRODUCTION.QTYXPALLETColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.QTYXPALLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string STATUS {
                get {
                    return ((string)(this[this.tableTORDERPRODUCTION.STATUSColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal BATCH {
                get {
                    try {
                        return ((decimal)(this[this.tableTORDERPRODUCTION.BATCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'BATCH\' de la tabla \'TORDERPRODUCTION\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTORDERPRODUCTION.BATCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime CREATIONDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTORDERPRODUCTION.CREATIONDATEColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.CREATIONDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CREATIONUSER {
                get {
                    return ((string)(this[this.tableTORDERPRODUCTION.CREATIONUSERColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.CREATIONUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LASTCHANGEDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTORDERPRODUCTION.LASTCHANGEDATEColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.LASTCHANGEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LASTCHANGEUSER {
                get {
                    return ((string)(this[this.tableTORDERPRODUCTION.LASTCHANGEUSERColumn]));
                }
                set {
                    this[this.tableTORDERPRODUCTION.LASTCHANGEUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBATCHNull() {
                return this.IsNull(this.tableTORDERPRODUCTION.BATCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBATCHNull() {
                this[this.tableTORDERPRODUCTION.BATCHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class TORDERPRODUCTIONRowChangeEvent : global::System.EventArgs {
            
            private TORDERPRODUCTIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TORDERPRODUCTIONRowChangeEvent(TORDERPRODUCTIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TORDERPRODUCTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LabMan.UBSLABMN_MXOrderProdTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TORDERPRODUCTIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public TORDERPRODUCTIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TORDERPRODUCTION";
            tableMapping.ColumnMappings.Add("ORDERID", "ORDERID");
            tableMapping.ColumnMappings.Add("PLANTNUMBER", "PLANTNUMBER");
            tableMapping.ColumnMappings.Add("MATNR", "MATNR");
            tableMapping.ColumnMappings.Add("WORKCENTERID", "WORKCENTERID");
            tableMapping.ColumnMappings.Add("REALQTY", "REALQTY");
            tableMapping.ColumnMappings.Add("PLANNEDQTY", "PLANNEDQTY");
            tableMapping.ColumnMappings.Add("REALDATE", "REALDATE");
            tableMapping.ColumnMappings.Add("PLANNEDDATE", "PLANNEDDATE");
            tableMapping.ColumnMappings.Add("QTYXPALLET", "QTYXPALLET");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            tableMapping.ColumnMappings.Add("BATCH", "BATCH");
            tableMapping.ColumnMappings.Add("CREATIONDATE", "CREATIONDATE");
            tableMapping.ColumnMappings.Add("CREATIONUSER", "CREATIONUSER");
            tableMapping.ColumnMappings.Add("LASTCHANGEDATE", "LASTCHANGEDATE");
            tableMapping.ColumnMappings.Add("LASTCHANGEUSER", "LASTCHANGEUSER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TORDERPRODUCTION] WHERE (([ORDERID] = @Original_ORDERID) AND ([PLANTNUMBER] = @Original_PLANTNUMBER) AND ([MATNR] = @Original_MATNR) AND ([WORKCENTERID] = @Original_WORKCENTERID) AND ([REALQTY] = @Original_REALQTY) AND ([PLANNEDQTY] = @Original_PLANNEDQTY) AND ([REALDATE] = @Original_REALDATE) AND ([PLANNEDDATE] = @Original_PLANNEDDATE) AND ([QTYXPALLET] = @Original_QTYXPALLET) AND ([STATUS] = @Original_STATUS) AND ((@IsNull_BATCH = 1 AND [BATCH] IS NULL) OR ([BATCH] = @Original_BATCH)) AND ([CREATIONDATE] = @Original_CREATIONDATE) AND ([CREATIONUSER] = @Original_CREATIONUSER) AND ([LASTCHANGEDATE] = @Original_LASTCHANGEDATE) AND ([LASTCHANGEUSER] = @Original_LASTCHANGEUSER))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDERID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANTNUMBER", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTNUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MATNR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MATNR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKCENTERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCENTERID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REALQTY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "REALQTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANNEDQTY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "PLANNEDQTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REALDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REALDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANNEDDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANNEDDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QTYXPALLET", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "QTYXPALLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATUS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BATCH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BATCH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BATCH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "BATCH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATIONUSER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONUSER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LASTCHANGEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTCHANGEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LASTCHANGEUSER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTCHANGEUSER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TORDERPRODUCTION] ([ORDERID], [PLANTNUMBER], [MATNR], [WORKCENTERID], [REALQTY], [PLANNEDQTY], [REALDATE], [PLANNEDDATE], [QTYXPALLET], [STATUS], [BATCH], [CREATIONDATE], [CREATIONUSER], [LASTCHANGEDATE], [LASTCHANGEUSER]) VALUES (@ORDERID, @PLANTNUMBER, @MATNR, @WORKCENTERID, @REALQTY, @PLANNEDQTY, @REALDATE, @PLANNEDDATE, @QTYXPALLET, @STATUS, @BATCH, @CREATIONDATE, @CREATIONUSER, @LASTCHANGEDATE, @LASTCHANGEUSER);
SELECT ORDERID, PLANTNUMBER, MATNR, WORKCENTERID, REALQTY, PLANNEDQTY, REALDATE, PLANNEDDATE, QTYXPALLET, STATUS, BATCH, CREATIONDATE, CREATIONUSER, LASTCHANGEDATE, LASTCHANGEUSER FROM TORDERPRODUCTION WHERE (ORDERID = @ORDERID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANTNUMBER", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTNUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MATNR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MATNR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCENTERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCENTERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REALQTY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "REALQTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANNEDQTY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "PLANNEDQTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REALDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REALDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANNEDDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANNEDDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QTYXPALLET", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "QTYXPALLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BATCH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "BATCH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATIONUSER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONUSER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTCHANGEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTCHANGEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTCHANGEUSER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTCHANGEUSER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TORDERPRODUCTION] SET [ORDERID] = @ORDERID, [PLANTNUMBER] = @PLANTNUMBER, [MATNR] = @MATNR, [WORKCENTERID] = @WORKCENTERID, [REALQTY] = @REALQTY, [PLANNEDQTY] = @PLANNEDQTY, [REALDATE] = @REALDATE, [PLANNEDDATE] = @PLANNEDDATE, [QTYXPALLET] = @QTYXPALLET, [STATUS] = @STATUS, [BATCH] = @BATCH, [CREATIONDATE] = @CREATIONDATE, [CREATIONUSER] = @CREATIONUSER, [LASTCHANGEDATE] = @LASTCHANGEDATE, [LASTCHANGEUSER] = @LASTCHANGEUSER WHERE (([ORDERID] = @Original_ORDERID) AND ([PLANTNUMBER] = @Original_PLANTNUMBER) AND ([MATNR] = @Original_MATNR) AND ([WORKCENTERID] = @Original_WORKCENTERID) AND ([REALQTY] = @Original_REALQTY) AND ([PLANNEDQTY] = @Original_PLANNEDQTY) AND ([REALDATE] = @Original_REALDATE) AND ([PLANNEDDATE] = @Original_PLANNEDDATE) AND ([QTYXPALLET] = @Original_QTYXPALLET) AND ([STATUS] = @Original_STATUS) AND ((@IsNull_BATCH = 1 AND [BATCH] IS NULL) OR ([BATCH] = @Original_BATCH)) AND ([CREATIONDATE] = @Original_CREATIONDATE) AND ([CREATIONUSER] = @Original_CREATIONUSER) AND ([LASTCHANGEDATE] = @Original_LASTCHANGEDATE) AND ([LASTCHANGEUSER] = @Original_LASTCHANGEUSER));
SELECT ORDERID, PLANTNUMBER, MATNR, WORKCENTERID, REALQTY, PLANNEDQTY, REALDATE, PLANNEDDATE, QTYXPALLET, STATUS, BATCH, CREATIONDATE, CREATIONUSER, LASTCHANGEDATE, LASTCHANGEUSER FROM TORDERPRODUCTION WHERE (ORDERID = @ORDERID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANTNUMBER", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTNUMBER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MATNR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MATNR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCENTERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCENTERID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REALQTY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "REALQTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANNEDQTY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "PLANNEDQTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REALDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REALDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANNEDDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANNEDDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QTYXPALLET", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "QTYXPALLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BATCH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "BATCH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATIONUSER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONUSER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTCHANGEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTCHANGEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTCHANGEUSER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTCHANGEUSER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDERID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANTNUMBER", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTNUMBER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MATNR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MATNR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKCENTERID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCENTERID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REALQTY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "REALQTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANNEDQTY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "PLANNEDQTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REALDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REALDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANNEDDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANNEDDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QTYXPALLET", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 22, 0, "QTYXPALLET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATUS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BATCH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BATCH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BATCH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 0, "BATCH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATIONDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATIONUSER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATIONUSER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LASTCHANGEDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTCHANGEDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LASTCHANGEUSER", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTCHANGEUSER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LabMan.Properties.Settings.Default.UBSLABMN_MXConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ORDERID, PLANTNUMBER, MATNR, WORKCENTERID, REALQTY, PLANNEDQTY, REALDATE, " +
                "PLANNEDDATE, QTYXPALLET, STATUS, BATCH, CREATIONDATE, CREATIONUSER, LASTCHANGEDA" +
                "TE, LASTCHANGEUSER FROM dbo.TORDERPRODUCTION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(UBSLABMN_MXOrderProd.TORDERPRODUCTIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual UBSLABMN_MXOrderProd.TORDERPRODUCTIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            UBSLABMN_MXOrderProd.TORDERPRODUCTIONDataTable dataTable = new UBSLABMN_MXOrderProd.TORDERPRODUCTIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(UBSLABMN_MXOrderProd.TORDERPRODUCTIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(UBSLABMN_MXOrderProd dataSet) {
            return this.Adapter.Update(dataSet, "TORDERPRODUCTION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ORDERID, string Original_PLANTNUMBER, string Original_MATNR, string Original_WORKCENTERID, decimal Original_REALQTY, decimal Original_PLANNEDQTY, System.DateTime Original_REALDATE, System.DateTime Original_PLANNEDDATE, decimal Original_QTYXPALLET, string Original_STATUS, global::System.Nullable<decimal> Original_BATCH, System.DateTime Original_CREATIONDATE, string Original_CREATIONUSER, System.DateTime Original_LASTCHANGEDATE, string Original_LASTCHANGEUSER) {
            if ((Original_ORDERID == null)) {
                throw new global::System.ArgumentNullException("Original_ORDERID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ORDERID));
            }
            if ((Original_PLANTNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_PLANTNUMBER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PLANTNUMBER));
            }
            if ((Original_MATNR == null)) {
                throw new global::System.ArgumentNullException("Original_MATNR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_MATNR));
            }
            if ((Original_WORKCENTERID == null)) {
                throw new global::System.ArgumentNullException("Original_WORKCENTERID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_WORKCENTERID));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_REALQTY));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_PLANNEDQTY));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_REALDATE));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_PLANNEDDATE));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_QTYXPALLET));
            if ((Original_STATUS == null)) {
                throw new global::System.ArgumentNullException("Original_STATUS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_STATUS));
            }
            if ((Original_BATCH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_BATCH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_CREATIONDATE));
            if ((Original_CREATIONUSER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATIONUSER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_CREATIONUSER));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_LASTCHANGEDATE));
            if ((Original_LASTCHANGEUSER == null)) {
                throw new global::System.ArgumentNullException("Original_LASTCHANGEUSER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_LASTCHANGEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ORDERID, string PLANTNUMBER, string MATNR, string WORKCENTERID, decimal REALQTY, decimal PLANNEDQTY, System.DateTime REALDATE, System.DateTime PLANNEDDATE, decimal QTYXPALLET, string STATUS, global::System.Nullable<decimal> BATCH, System.DateTime CREATIONDATE, string CREATIONUSER, System.DateTime LASTCHANGEDATE, string LASTCHANGEUSER) {
            if ((ORDERID == null)) {
                throw new global::System.ArgumentNullException("ORDERID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ORDERID));
            }
            if ((PLANTNUMBER == null)) {
                throw new global::System.ArgumentNullException("PLANTNUMBER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PLANTNUMBER));
            }
            if ((MATNR == null)) {
                throw new global::System.ArgumentNullException("MATNR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(MATNR));
            }
            if ((WORKCENTERID == null)) {
                throw new global::System.ArgumentNullException("WORKCENTERID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(WORKCENTERID));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(REALQTY));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PLANNEDQTY));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(REALDATE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(PLANNEDDATE));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(QTYXPALLET));
            if ((STATUS == null)) {
                throw new global::System.ArgumentNullException("STATUS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(STATUS));
            }
            if ((BATCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(BATCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(CREATIONDATE));
            if ((CREATIONUSER == null)) {
                throw new global::System.ArgumentNullException("CREATIONUSER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(CREATIONUSER));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(LASTCHANGEDATE));
            if ((LASTCHANGEUSER == null)) {
                throw new global::System.ArgumentNullException("LASTCHANGEUSER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(LASTCHANGEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ORDERID, 
                    string PLANTNUMBER, 
                    string MATNR, 
                    string WORKCENTERID, 
                    decimal REALQTY, 
                    decimal PLANNEDQTY, 
                    System.DateTime REALDATE, 
                    System.DateTime PLANNEDDATE, 
                    decimal QTYXPALLET, 
                    string STATUS, 
                    global::System.Nullable<decimal> BATCH, 
                    System.DateTime CREATIONDATE, 
                    string CREATIONUSER, 
                    System.DateTime LASTCHANGEDATE, 
                    string LASTCHANGEUSER, 
                    string Original_ORDERID, 
                    string Original_PLANTNUMBER, 
                    string Original_MATNR, 
                    string Original_WORKCENTERID, 
                    decimal Original_REALQTY, 
                    decimal Original_PLANNEDQTY, 
                    System.DateTime Original_REALDATE, 
                    System.DateTime Original_PLANNEDDATE, 
                    decimal Original_QTYXPALLET, 
                    string Original_STATUS, 
                    global::System.Nullable<decimal> Original_BATCH, 
                    System.DateTime Original_CREATIONDATE, 
                    string Original_CREATIONUSER, 
                    System.DateTime Original_LASTCHANGEDATE, 
                    string Original_LASTCHANGEUSER) {
            if ((ORDERID == null)) {
                throw new global::System.ArgumentNullException("ORDERID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ORDERID));
            }
            if ((PLANTNUMBER == null)) {
                throw new global::System.ArgumentNullException("PLANTNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PLANTNUMBER));
            }
            if ((MATNR == null)) {
                throw new global::System.ArgumentNullException("MATNR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(MATNR));
            }
            if ((WORKCENTERID == null)) {
                throw new global::System.ArgumentNullException("WORKCENTERID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(WORKCENTERID));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(REALQTY));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PLANNEDQTY));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(REALDATE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(PLANNEDDATE));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(QTYXPALLET));
            if ((STATUS == null)) {
                throw new global::System.ArgumentNullException("STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(STATUS));
            }
            if ((BATCH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(BATCH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(CREATIONDATE));
            if ((CREATIONUSER == null)) {
                throw new global::System.ArgumentNullException("CREATIONUSER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(CREATIONUSER));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(LASTCHANGEDATE));
            if ((LASTCHANGEUSER == null)) {
                throw new global::System.ArgumentNullException("LASTCHANGEUSER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(LASTCHANGEUSER));
            }
            if ((Original_ORDERID == null)) {
                throw new global::System.ArgumentNullException("Original_ORDERID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ORDERID));
            }
            if ((Original_PLANTNUMBER == null)) {
                throw new global::System.ArgumentNullException("Original_PLANTNUMBER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_PLANTNUMBER));
            }
            if ((Original_MATNR == null)) {
                throw new global::System.ArgumentNullException("Original_MATNR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_MATNR));
            }
            if ((Original_WORKCENTERID == null)) {
                throw new global::System.ArgumentNullException("Original_WORKCENTERID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_WORKCENTERID));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_REALQTY));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_PLANNEDQTY));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_REALDATE));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_PLANNEDDATE));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_QTYXPALLET));
            if ((Original_STATUS == null)) {
                throw new global::System.ArgumentNullException("Original_STATUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_STATUS));
            }
            if ((Original_BATCH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_BATCH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_CREATIONDATE));
            if ((Original_CREATIONUSER == null)) {
                throw new global::System.ArgumentNullException("Original_CREATIONUSER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_CREATIONUSER));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_LASTCHANGEDATE));
            if ((Original_LASTCHANGEUSER == null)) {
                throw new global::System.ArgumentNullException("Original_LASTCHANGEUSER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_LASTCHANGEUSER));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PLANTNUMBER, 
                    string MATNR, 
                    string WORKCENTERID, 
                    decimal REALQTY, 
                    decimal PLANNEDQTY, 
                    System.DateTime REALDATE, 
                    System.DateTime PLANNEDDATE, 
                    decimal QTYXPALLET, 
                    string STATUS, 
                    global::System.Nullable<decimal> BATCH, 
                    System.DateTime CREATIONDATE, 
                    string CREATIONUSER, 
                    System.DateTime LASTCHANGEDATE, 
                    string LASTCHANGEUSER, 
                    string Original_ORDERID, 
                    string Original_PLANTNUMBER, 
                    string Original_MATNR, 
                    string Original_WORKCENTERID, 
                    decimal Original_REALQTY, 
                    decimal Original_PLANNEDQTY, 
                    System.DateTime Original_REALDATE, 
                    System.DateTime Original_PLANNEDDATE, 
                    decimal Original_QTYXPALLET, 
                    string Original_STATUS, 
                    global::System.Nullable<decimal> Original_BATCH, 
                    System.DateTime Original_CREATIONDATE, 
                    string Original_CREATIONUSER, 
                    System.DateTime Original_LASTCHANGEDATE, 
                    string Original_LASTCHANGEUSER) {
            return this.Update(Original_ORDERID, PLANTNUMBER, MATNR, WORKCENTERID, REALQTY, PLANNEDQTY, REALDATE, PLANNEDDATE, QTYXPALLET, STATUS, BATCH, CREATIONDATE, CREATIONUSER, LASTCHANGEDATE, LASTCHANGEUSER, Original_ORDERID, Original_PLANTNUMBER, Original_MATNR, Original_WORKCENTERID, Original_REALQTY, Original_PLANNEDQTY, Original_REALDATE, Original_PLANNEDDATE, Original_QTYXPALLET, Original_STATUS, Original_BATCH, Original_CREATIONDATE, Original_CREATIONUSER, Original_LASTCHANGEDATE, Original_LASTCHANGEUSER);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TORDERPRODUCTIONTableAdapter _tORDERPRODUCTIONTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TORDERPRODUCTIONTableAdapter TORDERPRODUCTIONTableAdapter {
            get {
                return this._tORDERPRODUCTIONTableAdapter;
            }
            set {
                this._tORDERPRODUCTIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tORDERPRODUCTIONTableAdapter != null) 
                            && (this._tORDERPRODUCTIONTableAdapter.Connection != null))) {
                    return this._tORDERPRODUCTIONTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tORDERPRODUCTIONTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(UBSLABMN_MXOrderProd dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tORDERPRODUCTIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TORDERPRODUCTION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tORDERPRODUCTIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(UBSLABMN_MXOrderProd dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tORDERPRODUCTIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TORDERPRODUCTION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tORDERPRODUCTIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(UBSLABMN_MXOrderProd dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tORDERPRODUCTIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TORDERPRODUCTION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tORDERPRODUCTIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(UBSLABMN_MXOrderProd dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tORDERPRODUCTIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tORDERPRODUCTIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tORDERPRODUCTIONTableAdapter != null)) {
                    revertConnections.Add(this._tORDERPRODUCTIONTableAdapter, this._tORDERPRODUCTIONTableAdapter.Connection);
                    this._tORDERPRODUCTIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tORDERPRODUCTIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tORDERPRODUCTIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tORDERPRODUCTIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tORDERPRODUCTIONTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tORDERPRODUCTIONTableAdapter != null)) {
                    this._tORDERPRODUCTIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tORDERPRODUCTIONTableAdapter]));
                    this._tORDERPRODUCTIONTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591